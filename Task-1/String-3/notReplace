// 11)notReplace
// Given a string, return a string where every appearance of the lowercase word "is" has been replaced with "is not". The word "is" should not be immediately preceeded or followed by a letter -- so for example the "is" in "this" does not count. (Note: Character.isLetter(char) tests if a char is a letter.)

// notReplace("is test") → "is not test"
// notReplace("is-is") → "is not-is not"
// notReplace("This is right") → "This is not right"

// Code:
public String notReplace(String str) {
  String result="";
  boolean cond1,cond2;
  for(int i=0; i<str.length(); ){
    if(i+2<=str.length() && str.substring(i,i+2).equals("is")){
      cond1 = (i==0 || !Character.isLetter(str.charAt(i-1)));
      cond2 = (i+2==str.length() || !Character.isLetter(str.charAt(i+2)));
      if(cond1 && cond2){
        result+="is not";
        i+=2;
        continue;
      }
    }
    result=result+str.charAt(i);
    i++;
  }
  return result;
}
